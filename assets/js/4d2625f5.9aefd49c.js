"use strict";(self.webpackChunkuser_guide=self.webpackChunkuser_guide||[]).push([[7987],{5680:(e,a,r)=>{r.d(a,{xA:()=>c,yg:()=>g});var n=r(6540);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),r.push.apply(r,n)}return r}function l(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach(function(a){t(e,a,r[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))})}return e}function o(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var s=n.createContext({}),m=function(e){var a=n.useContext(s),r=a;return e&&(r="function"==typeof e?e(a):l(l({},a),e)),r},c=function(e){var a=m(e.components);return n.createElement(s.Provider,{value:a},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},d=n.forwardRef(function(e,a){var r=e.components,t=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=m(r),d=t,g=p["".concat(s,".").concat(d)]||p[d]||u[d]||i;return r?n.createElement(g,l(l({ref:a},c),{},{components:r})):n.createElement(g,l({ref:a},c))});function g(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=r.length,l=new Array(i);l[0]=d;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o[p]="string"==typeof e?e:t,l[1]=o;for(var m=2;m<i;m++)l[m]=r[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7118:(e,a,r)=>{r.d(a,{A:()=>n});const n=r.p+"assets/images/compare1-45953c2c70ee8634663565ac28784dcc.png"},9813:(e,a,r)=>{r.r(a),r.d(a,{contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var n=r(8168),t=(r(6540),r(5680));const i={sidebar_position:2},l="%compare",o={unversionedId:"macros/macros-validation/compare",id:"macros/macros-validation/compare",title:"%compare",description:"Created by **Jonathan Amato**",source:"@site/docs/macros/macros-validation/compare.md",sourceDirName:"macros/macros-validation",slug:"/macros/macros-validation/compare",permalink:"/user-guide/docs/macros/macros-validation/compare",editUrl:"https://github.com/Emanate-Biostats-Inc/user-guide/blob/master/docs/macros/macros-validation/compare.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"macrosSidebar",previous:{title:"%compareNobs",permalink:"/user-guide/docs/macros/macros-validation/comparenobs"},next:{title:"%proc_compare",permalink:"/user-guide/docs/macros/macros-validation/proc-compare"}},s=[{value:"Description",id:"description",children:[],level:2},{value:"Defintion",id:"defintion",children:[],level:2},{value:"Required Parameters",id:"required-parameters",children:[{value:"<em>base</em>",id:"base",children:[],level:3},{value:"<em>compare</em>",id:"compare-1",children:[],level:3}],level:2},{value:"Conditionally Required Parameter",id:"conditionally-required-parameter",children:[{value:"<em>by</em>",id:"by",children:[],level:3}],level:2},{value:"Optional Parameters",id:"optional-parameters",children:[{value:"<em>var</em>",id:"var",children:[],level:3},{value:"<em>with</em>",id:"with",children:[],level:3},{value:"<em>keep</em>",id:"keep",children:[],level:3},{value:"<em>debug</em>",id:"debug",children:[],level:3}],level:2},{value:"Examples",id:"examples",children:[{value:"SDTM/ADaM",id:"sdtmadam",children:[],level:3},{value:"Table/Figure/Listing",id:"tablefigurelisting",children:[],level:3}],level:2},{value:"Outcome",id:"outcome",children:[{value:"Datasets",id:"datasets",children:[{value:"NOBS Differences",id:"nobs-differences",children:[],level:4},{value:"Value Differences",id:"value-differences",children:[],level:4}],level:3}],level:2},{value:"Notes",id:"notes",children:[{value:"Possible REASONS values",id:"possible-reasons-values",children:[],level:3}],level:2}],m={toc:s},c="wrapper";function p(e){let{components:a,...i}=e;return(0,t.yg)(c,(0,n.A)({},m,i,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("h1",{id:"compare"},"%compare"),(0,t.yg)("p",null,(0,t.yg)("em",{parentName:"p"},"Created by ",(0,t.yg)("a",{parentName:"em",href:"mailto:jonathan.amato@emanatebiostats.com?subject=User%20Guide:%20compare"},(0,t.yg)("strong",{parentName:"a"},"Jonathan Amato")))),(0,t.yg)("h2",{id:"description"},"Description"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"compare")," provides more comparison mismatch details such as the following:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"unique differences by variable"),(0,t.yg)("li",{parentName:"ul"},"NOBS differences"),(0,t.yg)("li",{parentName:"ul"},"differences after excluding NOBS differences"),(0,t.yg)("li",{parentName:"ul"},"number of occurrences"),(0,t.yg)("li",{parentName:"ul"},"full values that aren't truncated")),(0,t.yg)("h2",{id:"defintion"},"Defintion"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sas"},"%macro compare(\n    base    = null,\n    compare = null,\n    by      = null,\n    keep    = null,\n    var     = null,\n    with    = null,\n    debug   = 0\n);\n")),(0,t.yg)("h2",{id:"required-parameters"},"Required Parameters"),(0,t.yg)("h3",{id:"base"},(0,t.yg)("em",{parentName:"h3"},"base")),(0,t.yg)("p",null,"This is the same value you would use in a normal proc compare."),(0,t.yg)("h3",{id:"compare-1"},(0,t.yg)("em",{parentName:"h3"},"compare")),(0,t.yg)("p",null,"This is the same value you would use in a normal proc compare."),(0,t.yg)("h2",{id:"conditionally-required-parameter"},"Conditionally Required Parameter"),(0,t.yg)("h3",{id:"by"},(0,t.yg)("em",{parentName:"h3"},"by")),(0,t.yg)("p",null,"If NOBS are mismatching, then you have to set the categorization variables to compare NOBS by (e.g. ",(0,t.yg)("inlineCode",{parentName:"p"},"lbtestcd visitnum visit"),")"),(0,t.yg)("h2",{id:"optional-parameters"},"Optional Parameters"),(0,t.yg)("h3",{id:"var"},(0,t.yg)("em",{parentName:"h3"},"var")),(0,t.yg)("p",null,"This is the same value you would use in a normal proc compare."),(0,t.yg)("h3",{id:"with"},(0,t.yg)("em",{parentName:"h3"},"with")),(0,t.yg)("p",null,"This is the same value you would use in a normal proc compare."),(0,t.yg)("h3",{id:"keep"},(0,t.yg)("em",{parentName:"h3"},"keep")),(0,t.yg)("p",null,"Set to the variables you want to keep in the ",(0,t.yg)("inlineCode",{parentName:"p"},"Compare_nobs")," subset datasets"),(0,t.yg)("h3",{id:"debug"},(0,t.yg)("em",{parentName:"h3"},"debug")),(0,t.yg)("p",null,"Set to ",(0,t.yg)("inlineCode",{parentName:"p"},"1")," or ",(0,t.yg)("inlineCode",{parentName:"p"},"Y")," if you want to preserve all datasets, variables, and log text created by the macro for debugging purposes."),(0,t.yg)("h2",{id:"examples"},"Examples"),(0,t.yg)("h3",{id:"sdtmadam"},"SDTM/ADaM"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sas"},"/*\n%compare(\n    by      = paramcd visitnum visit,\n    base    = adlb,\n    compare = qc_adlb\n);\n*/\n")),(0,t.yg)("h3",{id:"tablefigurelisting"},"Table/Figure/Listing"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-sas"},"/*\n%compare(\n  base    = final,\n  compare = qc_final,\n  var     = paramn ord text col1 col2 col3,\n  with    = paramn ord stat trt1 trt2 trt3\n);\n*/\n")),(0,t.yg)("h2",{id:"outcome"},"Outcome"),(0,t.yg)("h3",{id:"datasets"},"Datasets"),(0,t.yg)("h4",{id:"nobs-differences"},"NOBS Differences"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_nobs")," \u2013 Mismatching NOBS by user-provided variables"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_nobs_base")," \u2013 Base dataset subset to mismatching NOBS"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_nobs_compare")," \u2013 Compare dataset subset to mismatching NOBS"),(0,t.yg)("h4",{id:"value-differences"},"Value Differences"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_by_var_unique")," \u2013 unique mismatches sorted by variable name"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_by_var")," \u2013 all mismatches sorted by variable name"),(0,t.yg)("p",null,(0,t.yg)("inlineCode",{parentName:"p"},"Compare_by_obs")," \u2013 all mismatches sorted by observation then variable name"),(0,t.yg)("p",null,(0,t.yg)("img",{src:r(7118).A})),(0,t.yg)("h2",{id:"notes"},"Notes"),(0,t.yg)("p",null,"If NOBS are mismatching, the macro will provide a warning to use the ",(0,t.yg)("inlineCode",{parentName:"p"},"by=")," parameter if it's not already used. It will provide compare_nobs results and subset the base/compare datasets to excluding mismatching nobs to provide value mismatch details."),(0,t.yg)("p",null,"\u2757Always keep compare wrapped in a comment so it doesn't run during batch and you can still run it to isolate mismatches."),(0,t.yg)("h3",{id:"possible-reasons-values"},"Possible REASONS values"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Casing"),(0,t.yg)("li",{parentName:"ul"},"Precision or rounding"),(0,t.yg)("li",{parentName:"ul"},"Base populated, compare missing"),(0,t.yg)("li",{parentName:"ul"},"Base missing, compare populated"),(0,t.yg)("li",{parentName:"ul"},"Value mismatch")))}p.isMDXComponent=!0}}]);